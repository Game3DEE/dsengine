{"version":3,"sources":["hooks/useKeyboard.ts","components/tiles/Floor.tsx","components/tiles/Arch.tsx","components/tiles/Columns.tsx","components/tiles/Wall.tsx","components/tiles/StatueHorse.tsx","Level.ts","TileSets.tsx","pages/AdminPage.tsx","components/LevelRenderer.tsx","pages/EditPage.tsx","pages/HomePage.tsx","components/Player.tsx","pages/PlayPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useKeyboard","keyboardHandler","React","useEffect","document","addEventListener","removeEventListener","floorModel","Floor","props","nodes","useGLTF","rot","Math","floor","random","PI","name","object","Floor_Modular","clone","position","rotation-y","receiveShadow","receiveShaodw","preload","archModel","Arch","castShadow","SColumnModel","RColumnModel","PlainSquareColumn","Column","SquareColumn","RoundColumn","Column2","wallModel","wallCoverModel","brokenWallModel","WallWithCover","rotation","cnodes","wnodes","coverRotation","undefined","WallCover_Modular","Wall_Modular","PlainWall","WallBroken","Decorative_Wall","position-y","Wall","WallWithColumn","WallCorner","WallT","WallX","SubTilePhysics","model","StatueHorse","Pedestal","set","Horse","x","z","Scene","emptyLevel","version","size","tiles","id","physics","Walkable","element","tags","Blocked","getTileCount","length","getTileById","find","tile","getTileByIndex","index","DumpCamera","camera","useThree","console","log","TilePreview","tileIndex","gl","onClick","a","createElement","href","domElement","toDataURL","replace","download","click","OrbitControls","AdminPage","useState","setTileIndex","event","up","type","key","toLowerCase","className","preserveDrawingBuffer","quaternion","Quaternion","LevelRenderer","level","gridSize","map","position-x","position-z","y","scale","EditPage","cursorRef","useRef","tileRotation","setTileRotation","setMap","useParams","fetch","then","body","json","loadedLevel","catch","reason","item","localStorage","getItem","JSON","parse","setItem","stringify","levelSize","shadowMap","fallback","maxPolarAngle","Stats","intensity","args","rotation-x","onPointerMove","point","stopPropagation","gridX","gridY","getElementsByClassName","textContent","toFixed","current","onPointerDown","shiftKey","findIndex","newTiles","slice","ctrlKey","splice","indexOf","push","visible","ref","color","wireframe","HomePage","to","Player","forwardRef","nref","animation","character","animations","useAnimations","actions","tex","useTexture","wrapS","wrapT","RepeatWrapping","activeAnimation","setActiveAnimation","traverse","o","Mesh","m","Array","isArray","material","forEach","stop","play","children","lightRef","playerRef","tmpVec","Vector3","cameraRef","playerAnim","setPlayerAnim","physGridSize","physicsMap","useMemo","physGrid","fill","Void","ti","tileP","i","old","off","inputs","elems","el","idx","left","right","forward","backward","attack","useFrame","getWorldPosition","lerp","pos","lookAt","applyQuaternion","add","physGridX","physGridY","copy","down","cameraStep","staticGeo","PlayPage","setLevel","loadLevel","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94570de5.chunk.js","sourcesContent":["import React from 'react'\n\nexport const useKeyboard = (keyboardHandler: (event: KeyboardEvent) => void): void => {\n    React.useEffect(() => {\n        document.addEventListener('keydown', keyboardHandler, false)\n        document.addEventListener('keyup', keyboardHandler, false)\n        return () => {\n            document.removeEventListener('keydown', keyboardHandler)\n            document.removeEventListener('keyup', keyboardHandler)\n        }\n    })    \n}\n","import { useGLTF } from '@react-three/drei'\nimport { GroupProps } from 'react-three-fiber'\n\nconst floorModel = 'models/Floor_Modular.glb'\n\nexport function Floor(props: GroupProps) {\n    const { nodes } = useGLTF(floorModel)\n\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    const height = 0.08;\n    return (\n        <group name=\"floor\" {...props}>\n            <primitive object={nodes.Floor_Modular.clone()} position={[-1, -height, -1]} rotation-y={rot()} receiveShadow />\n            <primitive object={nodes.Floor_Modular.clone()} position={[ 1, -height, -1]} rotation-y={rot()} receiveShadow />\n            <primitive object={nodes.Floor_Modular.clone()} position={[-1, -height,  1]} rotation-y={rot()} receiveShadow />\n            <primitive object={nodes.Floor_Modular.clone()} position={[ 1, -height,  1]} rotation-y={rot()} receiveShaodw />\n        </group>\n    )\n}\n\nuseGLTF.preload(floorModel)","import { useGLTF } from '@react-three/drei'\nimport { GroupProps } from 'react-three-fiber'\nimport { Floor } from './Floor'\n\nconst archModel = 'models/Arch.glb'\n\nexport function Arch(props: GroupProps) {\n    const { nodes } = useGLTF(archModel)\n    return (\n        <group name=\"arch\" {...props}>\n            <primitive object={nodes.Arch.clone()} castShadow receiveShadow />\n            <Floor />\n        </group>\n        \n    )\n}\n\nuseGLTF.preload(archModel)","import { useGLTF } from '@react-three/drei'\nimport { GroupProps } from 'react-three-fiber'\nimport { Floor } from './Floor'\n\nconst SColumnModel = 'models/Column.glb'\nconst RColumnModel = 'models/Column2.glb'\n\n/** Warning: for internal use only */\nexport function PlainSquareColumn(props: GroupProps) {\n    const { nodes } = useGLTF(SColumnModel)\n    return (\n        <primitive object={nodes.Column.clone()} castShadow receiveShadow {...props} />\n    )\n\n}\n\nexport function SquareColumn(props: GroupProps) {\n    return (\n        <group name=\"sqcolumn\" {...props}>\n            <PlainSquareColumn />\n            <Floor />\n        </group>\n    )\n}\n\nexport function RoundColumn(props: GroupProps) {\n    const { nodes } = useGLTF(RColumnModel)\n    return (\n        <group name=\"rncolumn\" {...props}>\n            <primitive object={nodes.Column2.clone()} castShadow receiveShadow />\n            <Floor />\n        </group>\n    )\n}\n\nuseGLTF.preload(SColumnModel)\nuseGLTF.preload(RColumnModel)","import React from 'react';\n\nimport { useGLTF } from '@react-three/drei'\nimport { GroupProps } from 'react-three-fiber'\nimport { PlainSquareColumn } from './Columns';\nimport { Floor } from './Floor';\n\nconst wallModel = 'models/Wall_Modular.glb'\nconst wallCoverModel = 'models/WallCover_Modular.glb'\nconst brokenWallModel = 'models/Decorative_Wall.glb'\n\nfunction WallWithCover({ rotation, ...props }: GroupProps) {\n    const { nodes: cnodes } = useGLTF(wallCoverModel)\n    const { nodes: wnodes } = useGLTF(wallModel)\n\n    let coverRotation = undefined\n    if (rotation) {\n        const rot = rotation as any\n        coverRotation = [rot[0], rot[1], 0]\n    }\n\n    return (\n        <group {...props}>\n            <primitive object={cnodes.WallCover_Modular.clone()} rotation={coverRotation} castShadow receiveShadow />\n            <primitive object={wnodes.Wall_Modular.clone()}      rotation={rotation}      castShadow receiveShadow />\n        </group>\n    )\n}\n\nfunction PlainWall(props: GroupProps) {\n    const { nodes } = useGLTF(wallModel)\n\n    return (\n        <primitive object={nodes.Wall_Modular.clone()} castShadow receiveShadow {...props} />\n    )\n}\n\nexport function WallBroken(props: GroupProps) {\n    const { nodes } = useGLTF(brokenWallModel)\n\n    return (\n        <group name=\"wall-broken\" {...props} >\n            <primitive object={nodes.Decorative_Wall.clone()} position-y={1} />\n            <Floor/>\n        </group>\n    )   \n}\n\nexport function Wall(props: GroupProps) {\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    return (\n        <group name=\"wall\" {...props}>\n            <WallWithCover  position={[-1, 1, 0]} rotation={[0, 0, rot()]} />\n            <PlainWall      position={[-1, 3, 0]} rotation={[0, 0, rot()]} />\n            <WallWithCover  position={[ 1, 1, 0]} rotation={[0, 0, rot()]} />\n            <PlainWall      position={[ 1, 3, 0]} rotation={[0, 0, rot()]} />\n            <Floor />\n        </group>\n    )\n}\n\nexport function WallWithColumn(props: GroupProps) {\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    return (\n        <group name=\"wall-with-clm\" {...props}>\n            <WallWithCover  position={[-1, 1, 0]} rotation={[0, 0, rot()]} />\n            <PlainWall      position={[-1, 3, 0]} rotation={[0, 0, rot()]} />\n            <WallWithCover  position={[ 1, 1, 0]} rotation={[0, 0, rot()]} />\n            <PlainWall      position={[ 1, 3, 0]} rotation={[0, 0, rot()]} />\n            <PlainSquareColumn />\n            <Floor />\n        </group>\n    )\n}\n\nexport function WallCorner(props: GroupProps) {\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    return (\n        <group name=\"wall-corner\" {...props}>\n            <WallWithCover      position={[-1, 1, 0]} rotation={[0, 0, rot()]} />\n            <PlainWall          position={[-1, 3, 0]} rotation={[0, 0, rot()]} />\n            <WallWithCover      position={[ 0, 1, 1]} rotation={[0, Math.PI / 2, rot()]} />\n            <PlainWall          position={[ 0, 3, 1]} rotation={[0, Math.PI / 2, rot()]} />\n            <PlainSquareColumn />\n            <Floor />\n        </group>\n    )\n}\n\n\nexport function WallT(props: GroupProps) {\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    return (\n        <group name=\"wall-T\" {...props}>\n            <WallWithCover  position={[-1, 1, 0]} rotation={[0, 0, rot()]} />\n            <PlainWall      position={[-1, 3, 0]} rotation={[0, 0, rot()]} />\n            <WallWithCover  position={[ 1, 1, 0]} rotation={[0, 0, rot()]} />\n            <PlainWall      position={[ 1, 3, 0]} rotation={[0, 0, rot()]} />\n            <WallWithCover  position={[ 0, 1, 1]} rotation={[0, Math.PI / 2, rot()]} />\n            <PlainWall      position={[ 0, 3, 1]} rotation={[0, Math.PI / 2, rot()]} />\n            <PlainSquareColumn />\n            <Floor />\n        </group>\n    )\n}\n\nexport function WallX(props: GroupProps) {\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    return (\n        <group name=\"wall-X\" {...props}>\n            <WallWithCover  position={[-1, 1, 0]} rotation={[0, 0, rot()]} />\n            <PlainWall      position={[-1, 3, 0]} rotation={[0, 0, rot()]} />\n            <WallWithCover  position={[ 1, 1, 0]} rotation={[0, 0, rot()]} />\n            <PlainWall      position={[ 1, 3, 0]} rotation={[0, 0, rot()]} />\n            <WallWithCover  position={[ 0, 1, 1]} rotation={[0, Math.PI / 2, rot()]} />\n            <PlainWall      position={[ 0, 3, 1]} rotation={[0, Math.PI / 2, rot()]} />\n            <WallWithCover  position={[ 0, 1, -1]} rotation={[0, Math.PI / 2, rot()]} />\n            <PlainWall      position={[ 0, 3, -1]} rotation={[0, Math.PI / 2, rot()]} />\n            <PlainSquareColumn />\n            <Floor />\n        </group>\n    )\n}\n\nuseGLTF.preload(brokenWallModel)\nuseGLTF.preload(wallModel)\nuseGLTF.preload(wallCoverModel)\n","import React from \"react\"\n\nimport { useGLTF } from \"@react-three/drei\"\nimport { GroupProps } from \"react-three-fiber\"\nimport { Floor } from \"./Floor\"\n\nconst model = 'models/Statue_Horse.glb'\n\nexport function StatueHorse(props: GroupProps) {\n    const { nodes } = useGLTF(model)\n    \n    // HACK! TODO: Fix model\n    nodes.Pedestal.position.set(0,0,0)\n    nodes.Horse.position.x = 0;\n    nodes.Horse.position.z = 0;\n\n    return (\n        <group name=\"statue-horse\" {...props}>\n            <primitive object={nodes.Scene.clone()} castShadow receiveShadow />\n            <Floor />\n        </group>\n    )\n}\n\nuseGLTF.preload(model)\n","/** Represents a complete level definition */\nexport interface Level {\n    /**\n     * Version of Level format\n     * Currently always 1, will be tracked from official release.\n     */\n    version: number\n    /** Width and height of level (in tiles) */\n    size: number\n    /** list of all placed tiles in level */\n    tiles: TileInstance[]\n}\n\n/** Represents a single instance of a tile */\nexport interface TileInstance {\n    /** id of Tile definition */\n    id: string\n    /** x coordinate in tile grid */\n    x: number\n    /** y coordinate in tile grid */\n    y: number\n    /** rotation in steps of 90 degrees [0-3] */\n    rotation: number\n}\n\n/** Represents a tile definition */\nexport interface Tile {\n    /** globally unique ID of a tile */\n    id: string\n\n    /** A 3x3 grid of physics values\n     * @see SubTilePhysics\n     */\n    physics: SubTilePhysics[]\n\n    /** list of tags related to tile (used for search) */\n    tags: string[]\n\n    /** React Three Fiber element for tile */\n    element: JSX.Element\n}\n\n/**\n *  Represents the physics state of a part of a tile \n *  @see Tile.physics\n */\n\nexport enum SubTilePhysics {\n    Void,\n    Walkable,\n    Blocked,\n}\n\n/** Lookup tile at given position in level\n * @param {Level}  level level to search\n * @param {number} x position [in tile units]\n * @param {number} y position [in tile units]\n * \n * @returns {Tile} tile if found, or undefined if not\n */\nexport function findTileInLevel(lvl: Level, x: number, y: number) {\n    return lvl.tiles.find(tile => tile.x === x && tile.y === y)\n}\n\n/** Empty level, for easy state handling */\nexport const emptyLevel: Level = {\n    version: 0,\n    size: 64,\n    tiles: [],\n}\n","import {\n  Arch,\n  Floor,\n  RoundColumn,\n  SquareColumn,\n  StatueHorse,\n  Wall,\n  WallBroken,\n  WallCorner,\n  WallT,\n  WallWithColumn,\n  WallX,\n} from \"./components/tiles\";\n\nimport { SubTilePhysics, Tile } from \"./Level\";\n\nexport const tiles: Tile[] = [\n  {\n    id: \"qd2-floor\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <Floor />,\n    tags: [ 'Quaternius', 'Dungeon', 'Floor' ],\n  },\n  {\n    id: \"qd2-wall\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Blocked,  SubTilePhysics.Blocked,  SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <Wall />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall' ],\n  },\n  {\n    id: \"qd2-wall-with-column\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Blocked,  SubTilePhysics.Blocked,  SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <WallWithColumn />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall with Column' ],\n  },\n  {\n    id: \"qd2-wall-corner\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked,  SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked,  SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <WallCorner />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall', 'Corner' ],\n  },\n  {\n    id: \"qd2-wall-T\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Blocked,  SubTilePhysics.Blocked,  SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked,  SubTilePhysics.Walkable,\n    ],\n    element: <WallT />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall T' ],\n  },\n  {\n    id: \"qd2-wall-X\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked, SubTilePhysics.Walkable,\n      SubTilePhysics.Blocked,  SubTilePhysics.Blocked, SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked, SubTilePhysics.Walkable,\n    ],\n    element: <WallX />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall X' ],\n  },\n  {\n    id: \"qd2-wall-broken\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked,  SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <WallBroken />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall Broken' ],\n  },\n  {\n    id: \"qd2-arch\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Blocked,  SubTilePhysics.Walkable, SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <Arch />,\n    tags: [ 'Quaternius', 'Dungeon', 'Arch' ],\n  },\n  {\n    id: \"qd2-square-column\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <SquareColumn />,\n    tags: [ 'Quaternius', 'Dungeon', 'Square Column' ],\n  },\n  {\n    id: \"qd2-round-column\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <RoundColumn />,\n    tags: [ 'Quaternius', 'Dungeon', 'Round Column' ],\n  },\n  {\n    id: \"qd2-statue-horse\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <StatueHorse />,\n    tags: [ 'Quaternius', 'Dungeon', 'Statue', 'Horse' ],\n  },\n];\n\n/** Returns total number of available tiles\n * \n * NOTE: count is not stable across sessions/versions\n*/\nexport function getTileCount() {\n    return tiles.length\n}\n\n/** Returns tile definition by ID */\nexport function getTileById(id: string) {\n    return tiles.find(tile => tile.id === id)\n}\n\n/**\n * Returns tile index by ID, or -1 if not found \n * \n * NOTE: index is not stable across sessions/versions\n */\nexport function getTileIndexById(id: string) {\n    return tiles.findIndex(tile => tile.id === id)\n}\n\n/** Returns tile definiton by global tile index\n * \n * NOTE: index is not stable across sessions/versions\n*/\nexport function getTileByIndex(index: number) {\n    if (index < 0 || index >= tiles.length) {\n        return undefined;\n    }\n\n    return tiles[index]\n}\n","import { OrbitControls } from \"@react-three/drei\";\nimport React from \"react\";\nimport { Canvas, useThree } from \"react-three-fiber\";\nimport { Quaternion } from \"three\";\n\nimport { useKeyboard } from \"../hooks/useKeyboard\";\n\nimport { getTileByIndex, getTileCount } from \"../TileSets\";\n\nimport \"./AdminPage.css\";\n\nfunction DumpCamera() {\n  const { camera } = useThree();\n  console.log(camera.position, camera.rotation);\n  return <></>;\n}\n\ninterface Props {\n  tileIndex: number\n}\n\nfunction TilePreview({ tileIndex }: Props) {\n  const { gl } = useThree()\n\n  const onClick = () => {\n    const a = document.createElement('a')\n    a.href = gl.domElement.toDataURL().replace(\"image/png\", \"image/octet-stream\")\n    a.download = `${getTileByIndex(tileIndex)!.id}.png`\n    a.click()\n  }\n\n  return (\n    <>\n    <directionalLight />\n    <ambientLight />\n    <group \n      onClick={onClick}\n      position-y={-1}>\n      {getTileByIndex(tileIndex)!.element}\n    </group>\n      \n    <DumpCamera />\n    <OrbitControls />\n    </>\n  )\n}\n\nexport default function AdminPage() {\n  const [tileIndex, setTileIndex] = React.useState(0);\n\n  useKeyboard((event: KeyboardEvent) => {\n    const up = event.type === \"keyup\";\n\n    switch (event.key.toLowerCase()) {\n      case \"escape\":\n        setTileIndex(0);\n        break;\n      case \"[\":\n        up && tileIndex > 0 && setTileIndex(tileIndex - 1);\n        break;\n      case \"]\":\n        up && tileIndex < getTileCount() - 1 && setTileIndex(tileIndex + 1);\n        break;\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <h1>Admin page</h1>\n      <h2>Create tile preview bitmap</h2>\n      <div className=\"icon-preview\">\n        <Canvas\n          gl={{ preserveDrawingBuffer: true }}\n          camera={{\n            position: [-1.3, 3.4, 4.4],\n            quaternion: new Quaternion(-0.65, -0.24, -0.18),\n          }}\n        >\n          <TilePreview tileIndex={tileIndex} />\n        </Canvas>\n      </div>\n      <p>Click on tile to download image</p>\n    </div>\n  );\n}\n","import { GroupProps } from 'react-three-fiber'\nimport { Level } from '../Level'\nimport { getTileById } from '../TileSets';\n\ninterface OwnProps {\n    level: Level\n    gridSize: number\n}\n\ntype LevelRendererProps = OwnProps & GroupProps\n\nexport function LevelRenderer({ level, gridSize }: LevelRendererProps) {\n    const tiles = level.tiles.map(tile => (\n        <group \n            key={`${tile.x}x${tile.y}`}\n            position-x={tile.x * gridSize + gridSize / 2}\n            position-z={tile.y * gridSize + gridSize / 2}\n            rotation-y={-(Math.PI / 2) * tile.rotation}\n            scale={[0.25,0.25,0.25]}\n        >\n            {getTileById(tile.id)?.element}\n        </group>\n    ))\n    \n    return ( <>{tiles}</> );\n}","import React, { Suspense } from 'react'\n\nimport { Canvas, PointerEvent } from 'react-three-fiber'\nimport { Stats, OrbitControls } from '@react-three/drei'\nimport { Object3D } from 'three';\n\nimport { useKeyboard } from '../hooks/useKeyboard';\nimport { LevelRenderer } from '../components/LevelRenderer';\n\nimport { emptyLevel, findTileInLevel, Level, TileInstance } from '../Level';\nimport { getTileByIndex, getTileCount, getTileIndexById } from '../TileSets';\n\nimport './EditPage.css'\nimport { useParams } from 'react-router';\n\nconst gridSize = 1;\n\ninterface PageParams {\n    level?: string\n}\n\nexport default function EditPage() {\n    const cursorRef = React.useRef<Object3D>()\n    const [ tileIndex, setTileIndex ] = React.useState(-1)\n    const [ tileRotation, setTileRotation ] = React.useState(0)\n    const [ map, setMap ] = React.useState<Level>(emptyLevel)\n    const { level } = useParams<PageParams>()\n\n    React.useEffect(() => {\n        let levelToLoad = level || 'default';\n        fetch(`levels/${levelToLoad}.json`).then(body => body.json()).then(loadedLevel => {\n            setMap(loadedLevel)\n        }).catch(reason => {\n            console.log(reason)\n            const item = localStorage.getItem('untitled')\n            if (item) {\n                setMap(JSON.parse(item))\n            }    \n        })\n    }, [setMap, level])\n\n    // Handle moving the cursor\n    const onPointerMove = (event: PointerEvent) => {\n        const { point } = event\n        event?.stopPropagation()\n\n        const gridX = Math.floor(point.x / gridSize)\n        const gridY = Math.floor(point.z / gridSize)\n        document.getElementsByClassName('grid-pos')[0].textContent = `${gridX},${gridY} / ${point.x.toFixed(3)},${point.z.toFixed(3)} / ${tileRotation}`\n\n        if (cursorRef.current) {\n            cursorRef.current.position.set(\n                gridX * gridSize + gridSize / 2,\n                0,\n                gridY * gridSize + gridSize / 2,\n            )\n        }\n    }\n\n    // Handle modifying tile under cursor\n    const onPointerDown = (event: PointerEvent) => {\n        const { point } = event\n        event?.stopPropagation()\n\n        const gridX = Math.floor(point.x / gridSize)\n        const gridY = Math.floor(point.z / gridSize)\n        let tile = findTileInLevel(map, gridX, gridY)\n        \n        // Check if we're picking a tile\n        if (event.shiftKey) {\n            // ... and if so, handle case of no tile\n            setTileIndex(tile ? getTileIndexById(tile.id) : -1 )\n            tile && setTileRotation(tile.rotation)\n            return\n        }\n\n        // Update state with new tile (if there was one)\n        const { version, size, tiles } = map\n        const newTiles: TileInstance[] = tiles.slice()\n\n        if (tile && (tileIndex !== -1 || event.ctrlKey)) {\n            newTiles.splice(newTiles.indexOf(tile), 1)\n        }\n\n        // Only place new tile if one is \n        // selected and ctrl key not pressed\n        if (tileIndex >= 0 && !event.ctrlKey) {\n            newTiles.push({\n                id: getTileByIndex(tileIndex)!.id,\n                x: gridX,\n                y: gridY,\n                rotation: tileRotation,\n            })\n        }\n        \n        // finally update map!\n        setMap({ version, size, tiles: newTiles })\n    }\n\n    useKeyboard((event: KeyboardEvent) => {\n        const up = event.type === 'keyup'\n        switch(event.key.toLowerCase()) {\n            case 'escape':\n                setTileIndex(-1)\n                break;\n            case 's':\n                localStorage.setItem('untitled', JSON.stringify(map))\n                break;\n            case 'r':\n                up && setTileRotation((tileRotation + 1) % 4)\n                break\n            case '[':\n                up && tileIndex >= 0 && setTileIndex(tileIndex -1)\n                break\n            case ']':\n                up && tileIndex < getTileCount() -1 && setTileIndex(tileIndex +1)\n                break\n        }\n    })\n\n    const levelSize = map.size * gridSize\n    /* Why does this not work??? \n    tabIndex={-1} onKeyDown={keyPressed}\n    */\n    return (\n        <>\n        <span className=\"grid-pos\"/>\n        <Canvas shadowMap camera={{position:[8,5,0]}}>\n            <Suspense fallback={null}>\n                <OrbitControls maxPolarAngle={Math.PI * 0.5} />\n                <Stats />\n                <directionalLight intensity={0.4}/>\n                <ambientLight intensity={0.2} />\n                <gridHelper args={[levelSize, map.size, 0x222222, 0x444444]} />\n                <axesHelper args={[levelSize]} position-y={0.01} />\n                <LevelRenderer gridSize={gridSize} level={map} />\n                { /* hidden plane is there to detect mouse movement on \"ground\" */}\n                <mesh \n                    name=\"hidden-plane\"\n                    rotation-x={-Math.PI / 2}\n                    onPointerMove={onPointerMove}\n                    onPointerDown={onPointerDown}\n                    >\n                    <planeBufferGeometry args={[levelSize, levelSize]}/>\n                    <meshBasicMaterial visible={false}/>\n                </mesh>\n                <group\n                    ref={cursorRef}\n                    name=\"cursor-container\"\n                    position={[gridSize / 2, 0, gridSize / 2]}>\n\n                    {\n                    // show selected tile on cursor\n                    tileIndex >= 0 && <group\n                        scale={[0.25,0.25,0.25]}\n                        rotation-y={ -(Math.PI / 2) * tileRotation}\n                        name=\"tile-container\">\n                        {getTileByIndex(tileIndex)!.element}\n                    </group>\n                    }\n                    {\n                    <mesh\n                        name=\"cursor\"\n                        rotation-x={-Math.PI / 2}\n                        position-y={0.01}>\n                        <planeBufferGeometry args={[1,1,3,3]} />\n                        <meshBasicMaterial color={0x440000} wireframe />\n                    </mesh>\n                    }\n                </group>\n            </Suspense>\n        </Canvas>\n        </>\n    )\n}\n","import React from 'react'\n\nimport {\n    Link\n} from 'react-router-dom';\n  \nexport default function HomePage() {\n    return (\n        <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/play\">Play</Link>\n          </li>\n          <li>\n            <Link to=\"/edit\">Edit</Link>\n          </li>\n        </ul>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useAnimations, useGLTF, useTexture } from \"@react-three/drei\"\nimport { GroupProps } from \"react-three-fiber\"\nimport { Mesh, MeshBasicMaterial, RepeatWrapping } from 'three'\n\ninterface PlayerOwnProps {\n    animation?: string\n    character?: 'Cleric' | 'Monk' | 'Ranger' | 'Rogue' | 'Warrior' | 'Wizard'\n}\n\ntype PlayerProps = PlayerOwnProps & GroupProps\n\nexport const Player = React.forwardRef(({ animation = 'Idle', character = 'Warrior', ...props }: PlayerProps, nref: any) => {\n    const { animations, nodes } = useGLTF(`npc/${character}.glb`)\n    const { ref, actions } = useAnimations(animations)\n    const tex = useTexture(`npc/${character}_Texture.png`)\n    tex.wrapS = tex.wrapT = RepeatWrapping;\n    const [ activeAnimation, setActiveAnimation ] = React.useState('')\n\n    nodes.Scene.traverse(o => {\n        if (o instanceof Mesh) {\n            const m = o as Mesh;\n            (Array.isArray(m.material) ? m.material : [m.material]).forEach(m => {\n                (m as MeshBasicMaterial).map = tex;\n            })\n        }\n    })\n\n    React.useEffect(() => {\n        //console.log(actions)\n        if (animation) {\n            if (activeAnimation !== animation) {\n                if (activeAnimation) {\n                    actions[activeAnimation!].stop()\n                }\n                setActiveAnimation(animation)\n                actions[animation].play()\n            }\n        }\n    }, [actions, activeAnimation, setActiveAnimation, animation])\n\n    return (\n        <group name=\"player\" {...props} ref={nref}>\n            <primitive ref={ref} object={nodes.Scene} />\n            {props.children}\n        </group>\n        \n    )\n})\n","import React, { Suspense } from 'react'\n\nimport { Canvas, GroupProps, useFrame } from 'react-three-fiber'\nimport { Stats } from '@react-three/drei'\nimport { Object3D, Vector3 } from 'three'\n\nimport { LevelRenderer } from '../components/LevelRenderer'\nimport { Player } from '../components/Player'\nimport { useKeyboard } from '../hooks/useKeyboard'\n\nimport { emptyLevel, Level, SubTilePhysics } from '../Level'\nimport { getTileById } from '../TileSets'\n\nimport './PlayPage.css'\nimport { useParams } from 'react-router-dom'\n\ninterface SceneOwnProps {\n    level: Level\n}\ntype SceneProps = SceneOwnProps & GroupProps\n\ninterface PageParams {\n    level?: string\n}\n\nfunction Scene({ level }: SceneProps) {\n    const lightRef = React.useRef<Object3D>()\n    const playerRef = React.useRef<Object3D>()\n    const tmpVec = React.useRef<Vector3>(new Vector3())\n    const cameraRef = React.useRef<Object3D>()\n    const [ playerAnim, setPlayerAnim ] = React.useState('Idle')\n\n    const physGridSize = 64 * 3\n\n    const physicsMap = React.useMemo(() => {\n        let physGrid = new Array<SubTilePhysics>(physGridSize * physGridSize).fill(SubTilePhysics.Void)\n        level.tiles.forEach(ti => {\n            const x = (ti.x + 32) * 3; // add half the map size (in tiles) to\n            const y = (ti.y + 32) * 3; // make sure coordinates are positive\n            let tileP = getTileById(ti.id)\n            if (tileP) {\n                const physics = tileP.physics.slice();\n                for (let i = 0; i < ti.rotation; i++) {\n                    const old = physics.slice()\n                    physics[0] = old[6]\n                    physics[1] = old[3]\n                    physics[2] = old[0]\n                    physics[3] = old[7]\n                    physics[4] = old[4]\n                    physics[5] = old[1]\n                    physics[6] = old[8]\n                    physics[7] = old[5]\n                    physics[8] = old[2]\n                }\n                let off = (y * physGridSize) + x\n                for (let i = 0; i < 3; i++) {\n                    physGrid[off + 0] = physics[3 * i + 0]\n                    physGrid[off + 1] = physics[3 * i + 1]\n                    physGrid[off + 2] = physics[3 * i + 2]\n                    off += physGridSize\n                }\n            }\n        })\n        return physGrid\n    }, [level.tiles, physGridSize])\n\n    const physDebug = React.useMemo(() => {\n        const elems: JSX.Element[] = []\n        physicsMap.forEach((el, idx) => {\n            if (el === SubTilePhysics.Blocked) {\n                const x = ((idx % physGridSize) * 1/3) - 32 + (1/3)/2\n                const y = (Math.floor(idx / physGridSize) * 1/3) - 32 + (1/3)/2\n                elems.push(\n                    <mesh key={idx} position={[x, 1, y]}>\n                        <boxBufferGeometry args={[1/3,2,1/3]}/>\n                        <meshLambertMaterial color=\"hotpink\" />\n                    </mesh>\n                )\n            }\n        })\n\n        return elems\n    }, [physGridSize, physicsMap])\n\n    const inputs = {\n        left: false,\n        right: false,\n        forward: false,\n        backward: false,\n        attack: false,\n    }\n\n    useFrame(({ camera }) => {\n        if (playerRef.current && cameraRef.current) {\n            // Update camera\n\n            cameraRef.current.getWorldPosition(tmpVec.current)\n            camera.position.lerp(tmpVec.current, 0.05)\n            const pos = playerRef.current.position\n            camera.lookAt(pos.x, pos.y + 0.5, pos.z)\n\n            // Update rotation\n            if (inputs.left) {\n                playerRef.current.rotation.y += Math.PI * 0.005\n            }\n            if (inputs.right) {\n                playerRef.current.rotation.y += -Math.PI * 0.005\n            }\n            if (inputs.forward || inputs.backward) {\n                tmpVec.current.set(0, 0, inputs.forward ? 0.01 : -0.01)\n                tmpVec.current.applyQuaternion(playerRef.current.quaternion)\n                tmpVec.current.add(playerRef.current.position)\n\n                // Check if we can actually move there\n                let physGridX = Math.floor((tmpVec.current.x + 32) / (1/3));\n                let physGridY = Math.floor((tmpVec.current.z + 32) / (1/3));\n                //console.log(Math.floor(physGridX / 3) - 32, Math.floor(physGridY / 3) - 32, physGridX % 3, physGridY % 3)\n\n                if (physicsMap[physGridY * physGridSize + physGridX] === SubTilePhysics.Walkable) {\n                    playerRef.current.position.copy(tmpVec.current)\n                }\n\n                \n            }\n        }\n    });\n\n    useKeyboard(event => {\n        const down = event.type === 'keydown'\n        const cameraStep = 0.1;\n        switch(event.key.toLowerCase()) {\n            case 'arrowup':\n                if (cameraRef.current) {\n                    cameraRef.current.position.y -= cameraStep;\n                }\n                break;\n            case 'arrowdown':\n                if (cameraRef.current) {\n                    cameraRef.current.position.y += cameraStep;\n                }\n                break;\n            case 'arrowleft':\n                if (cameraRef.current) {\n                    cameraRef.current.position.x  -= cameraStep;\n                }\n                break;\n            case 'arrowright':\n                if (cameraRef.current) {\n                    cameraRef.current.position.x += cameraStep;\n                }\n                break;\n\n            case '1':\n                if (cameraRef.current) {\n                    cameraRef.current.position.set(.7,13,-2)\n                }\n                break;\n            case '2':\n                if (cameraRef.current) {\n                    cameraRef.current.position.set(.7,3,-2)\n                }\n                break;\n\n            case 'w':   inputs.forward = down; setPlayerAnim(down ? 'Walk' : 'Idle'); break;\n            case 'a':   inputs.left = down; break;\n            case 's':   inputs.backward = down; setPlayerAnim(down ? 'Walk' : 'Idle'); break;\n            case 'd':   inputs.right = down; break;\n\n            case 'c':\n                // TODO Switch camera modes\n                break;\n\n            case 'space':\n            case ' ':   inputs.attack = down;\n                break;\n\n            default:\n                console.log(event.key)\n        }\n    })\n\n    const staticGeo = React.useMemo(() => <LevelRenderer level={level} gridSize={1} />, [level])\n\n    return (\n        <>\n        <Stats />\n\n        <ambientLight intensity={0.2} />\n        <directionalLight intensity={0.4} position={[2.5,1,0.4]} ref={lightRef} castShadow />\n\n        {staticGeo}\n        {/*physDebug*/}\n\n        <Player\n            animation={playerAnim}\n            scale={[0.2,0.2,0.2]}\n            position={[1.5,0.06,0.4]}\n            ref={playerRef}>\n            <group position={[.7,3,-2]} ref={cameraRef} />\n        </Player>\n        </>\n    )\n}\n\nexport default function PlayPage() {\n    const [ level, setLevel ] = React.useState<Level>(emptyLevel)\n    const { level: loadLevel } = useParams<PageParams>()\n\n    React.useEffect(() => {\n        let levelToLoad = loadLevel || 'default';\n        fetch(`levels/${levelToLoad}.json`).then(body => body.json()).then(loadedLevel => {\n            setLevel(loadedLevel)\n        }).catch(reason => {\n            console.log(reason)\n            const item = localStorage.getItem('untitled')\n            if (item) {\n                setLevel(JSON.parse(item))\n            }    \n        })\n    }, [setLevel, loadLevel])\n\n    return (\n        <Canvas shadowMap camera={{position:[8,5,0]}} className=\"ingame\">\n            <Suspense fallback={null}>\n                <Scene level={level} />\n            </Suspense>\n        </Canvas>\n    )\n}\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport AdminPage from './pages/AdminPage';\nimport EditPage from './pages/EditPage';\nimport HomePage from './pages/HomePage';\nimport PlayPage from './pages/PlayPage';\n\nexport default function App() {\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/play/:level?\">\n            <PlayPage />\n          </Route>\n          <Route path=\"/edit/:level?\">\n            <EditPage />\n          </Route>\n          <Route path=\"/admin\">\n            <AdminPage />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}