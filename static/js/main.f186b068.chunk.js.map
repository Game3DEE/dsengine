{"version":3,"sources":["hooks/useKeyboard.ts","components/tiles/Floor.tsx","components/tiles/Arch.tsx","components/tiles/Wall.tsx","Level.ts","TileSets.tsx","pages/AdminPage.tsx","components/LevelRenderer.tsx","pages/EditPage.tsx","pages/HomePage.tsx","components/Player.tsx","pages/PlayPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useKeyboard","keyboardHandler","React","useEffect","document","addEventListener","removeEventListener","floorModel","Floor","props","nodes","useGLTF","rot","Math","floor","random","PI","name","object","Floor_Modular","clone","position","rotation-y","receiveShadow","receiveShaodw","preload","archModel","Arch","castShadow","SubTilePhysics","wallModel","Wall","Wall_Modular","rotation-z","WallCorner","rotation","WallT","WallX","tiles","id","physics","Walkable","element","tags","Blocked","getTileCount","length","getTileById","find","tile","getTileByIndex","index","DumpCamera","useThree","camera","gl","console","log","TilePreview","tileIndex","onClick","a","createElement","href","domElement","toDataURL","replace","download","click","position-y","OrbitControls","AdminPage","useState","setTileIndex","event","up","type","key","toLowerCase","className","preserveDrawingBuffer","quaternion","Quaternion","LevelRenderer","level","gridSize","map","position-x","x","position-z","y","scale","defaultMap","version","size","EditPage","cursorRef","useRef","tileRotation","setTileRotation","setMap","item","localStorage","getItem","lvl","JSON","parse","setItem","stringify","levelSize","shadowMap","fallback","maxPolarAngle","Stats","intensity","args","rotation-x","onPointerMove","point","stopPropagation","gridX","gridY","z","getElementsByClassName","textContent","toFixed","current","set","onPointerDown","shiftKey","findIndex","newTiles","slice","ctrlKey","splice","indexOf","push","visible","ref","color","wireframe","HomePage","to","playerModel","Player","forwardRef","nref","animations","useAnimations","actions","tex","useTexture","wrapS","wrapT","RepeatWrapping","activeAnimation","setActiveAnimation","Scene","traverse","o","Mesh","m","Array","isArray","material","forEach","animation","stop","play","children","lightRef","playerRef","tmpVec","Vector3","cameraRef","playerAnim","setPlayerAnim","physGridSize","physicsMap","useMemo","physGrid","fill","Void","ti","tileP","i","old","off","inputs","elems","el","idx","left","right","forward","backward","attack","useFrame","getWorldPosition","lerp","pos","lookAt","applyQuaternion","add","physGridX","physGridY","copy","down","staticGeo","PlayPage","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f186b068.chunk.js","sourcesContent":["import React from 'react'\n\nexport const useKeyboard = (keyboardHandler: (event: KeyboardEvent) => void): void => {\n    React.useEffect(() => {\n        document.addEventListener('keydown', keyboardHandler, false)\n        document.addEventListener('keyup', keyboardHandler, false)\n        return () => {\n            document.removeEventListener('keydown', keyboardHandler)\n            document.removeEventListener('keyup', keyboardHandler)\n        }\n    })    \n}\n","import { useGLTF } from '@react-three/drei'\nimport { GroupProps } from 'react-three-fiber'\n\nconst floorModel = 'models/Floor_Modular.glb'\n\nexport function Floor(props: GroupProps) {\n    const { nodes } = useGLTF(floorModel)\n\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    const height = 0.08;\n    return (\n        <group name=\"floor\" {...props}>\n            <primitive object={nodes.Floor_Modular.clone()} position={[-1, -height, -1]} rotation-y={rot()} receiveShadow />\n            <primitive object={nodes.Floor_Modular.clone()} position={[ 1, -height, -1]} rotation-y={rot()} receiveShadow />\n            <primitive object={nodes.Floor_Modular.clone()} position={[-1, -height,  1]} rotation-y={rot()} receiveShadow />\n            <primitive object={nodes.Floor_Modular.clone()} position={[ 1, -height,  1]} rotation-y={rot()} receiveShaodw />\n        </group>\n    )\n}\n\nuseGLTF.preload(floorModel)","import { useGLTF } from '@react-three/drei'\nimport { GroupProps } from 'react-three-fiber'\nimport { Floor } from './Floor'\n\nconst archModel = 'models/Arch.glb'\n\nexport function Arch(props: GroupProps) {\n    const { nodes } = useGLTF(archModel)\n    return (\n        <group name=\"arch\" {...props}>\n            <primitive object={nodes.Arch.clone()} castShadow receiveShadow />\n            <Floor />\n        </group>\n        \n    )\n}\n\nuseGLTF.preload(archModel)","import { useGLTF } from '@react-three/drei'\nimport { GroupProps } from 'react-three-fiber'\nimport { Floor } from './Floor';\n\nconst wallModel = 'models/Wall_Modular.glb'\n\nexport function Wall(props: GroupProps) {\n    const { nodes } = useGLTF(wallModel)\n\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    return (\n        <group name=\"wall\" {...props}>\n            <primitive object={nodes.Wall_Modular.clone()} position={[-1, 1, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[-1, 3, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 1, 1, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 1, 3, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <Floor />\n        </group>\n    )\n}\n\nexport function WallCorner(props: GroupProps) {\n    const { nodes } = useGLTF(wallModel)\n\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    return (\n        <group name=\"wall-corner\" {...props}>\n            <primitive object={nodes.Wall_Modular.clone()} position={[-1, 1, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[-1, 3, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 0, 1, 1]} rotation={[0, Math.PI / 2, rot()]} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 0, 3, 1]} rotation={[0, Math.PI / 2, rot()]} castShadow receiveShadow />\n            <Floor />\n        </group>\n    )\n}\n\n\nexport function WallT(props: GroupProps) {\n    const { nodes } = useGLTF(wallModel)\n\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    return (\n        <group name=\"wall-T\" {...props}>\n            <primitive object={nodes.Wall_Modular.clone()} position={[-1, 1, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[-1, 3, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 1, 1, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 1, 3, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 0, 1, 1]} rotation={[0, Math.PI / 2, rot()]} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 0, 3, 1]} rotation={[0, Math.PI / 2, rot()]} castShadow receiveShadow />\n            <Floor />\n        </group>\n    )\n}\n\nexport function WallX(props: GroupProps) {\n    const { nodes } = useGLTF(wallModel)\n\n    const rot = () => (Math.floor(Math.random() * 8) -4) * Math.PI;\n\n    return (\n        <group name=\"wall-T\" {...props}>\n            <primitive object={nodes.Wall_Modular.clone()} position={[-1, 1, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[-1, 3, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 1, 1, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 1, 3, 0]} rotation-z={rot()} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 0, 1, 1]} rotation={[0, Math.PI / 2, rot()]} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 0, 3, 1]} rotation={[0, Math.PI / 2, rot()]} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 0, 1, -1]} rotation={[0, Math.PI / 2, rot()]} castShadow receiveShadow />\n            <primitive object={nodes.Wall_Modular.clone()} position={[ 0, 3, -1]} rotation={[0, Math.PI / 2, rot()]} castShadow receiveShadow />\n            <Floor />\n        </group>\n    )\n}\n\nuseGLTF.preload(wallModel)","/** Represents a complete level definition */\nexport interface Level {\n    /**\n     * Version of Level format\n     * Currently always 1, will be tracked from official release.\n     */\n    version: number\n    /** Width and height of level (in tiles) */\n    size: number\n    /** list of all placed tiles in level */\n    tiles: TileInstance[]\n}\n\n/** Represents a single instance of a tile */\nexport interface TileInstance {\n    /** id of Tile definition */\n    id: string\n    /** x coordinate in tile grid */\n    x: number\n    /** y coordinate in tile grid */\n    y: number\n    /** rotation in steps of 90 degrees [0-3] */\n    rotation: number\n}\n\n/** Represents a tile definition */\nexport interface Tile {\n    /** globally unique ID of a tile */\n    id: string\n\n    /** A 3x3 grid of physics values\n     * @see SubTilePhysics\n     */\n    physics: SubTilePhysics[]\n\n    /** list of tags related to tile (used for search) */\n    tags: string[]\n\n    /** React Three Fiber element for tile */\n    element: JSX.Element\n}\n\n/**\n *  Represents the physics state of a part of a tile \n *  @see Tile.physics\n */\n\nexport enum SubTilePhysics {\n    Void,\n    Walkable,\n    Blocked,\n}\n\n/** Lookup tile at given position in level\n * @param {Level}  level level to search\n * @param {number} x position [in tile units]\n * @param {number} y position [in tile units]\n * \n * @returns {Tile} tile if found, or undefined if not\n */\nexport function findTileInLevel(lvl: Level, x: number, y: number) {\n    return lvl.tiles.find(tile => tile.x === x && tile.y === y)\n}\n","import {\n  Arch,\n  Floor,\n  Wall,\n  WallCorner,\n  WallT,\n  WallX,\n} from \"./components/tiles\";\n\nimport { SubTilePhysics, Tile } from \"./Level\";\n\nexport const tiles: Tile[] = [\n  {\n    id: \"qd2-floor\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <Floor />,\n    tags: [ 'Quaternius', 'Dungeon', 'Floor' ],\n  },\n  {\n    id: \"qd2-wall\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Blocked,  SubTilePhysics.Blocked,  SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <Wall />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall' ],\n  },\n  {\n    id: \"qd2-wall-corner\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked,  SubTilePhysics.Walkable,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked,  SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <WallCorner />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall', 'Corner' ],\n  },\n  {\n    id: \"qd2-wall-T\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Blocked,  SubTilePhysics.Blocked,  SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked,  SubTilePhysics.Walkable,\n    ],\n    element: <WallT />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall T' ],\n  },\n  {\n    id: \"qd2-wall-X\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked, SubTilePhysics.Walkable,\n      SubTilePhysics.Blocked,  SubTilePhysics.Blocked, SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Blocked, SubTilePhysics.Walkable,\n    ],\n    element: <WallX />,\n    tags: [ 'Quaternius', 'Dungeon', 'Wall X' ],\n  },\n  {\n    id: \"qd2-arch\",\n    physics: [\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n      SubTilePhysics.Blocked,  SubTilePhysics.Walkable, SubTilePhysics.Blocked,\n      SubTilePhysics.Walkable, SubTilePhysics.Walkable, SubTilePhysics.Walkable,\n    ],\n    element: <Arch />,\n    tags: [ 'Quaternius', 'Dungeon', 'Arch' ],\n  },\n];\n\n/** Returns total number of available tiles\n * \n * NOTE: count is not stable across sessions/versions\n*/\nexport function getTileCount() {\n    return tiles.length\n}\n\n/** Returns tile definition by ID */\nexport function getTileById(id: string) {\n    return tiles.find(tile => tile.id === id)\n}\n\n/**\n * Returns tile index by ID, or -1 if not found \n * \n * NOTE: index is not stable across sessions/versions\n */\nexport function getTileIndexById(id: string) {\n    return tiles.findIndex(tile => tile.id === id)\n}\n\n/** Returns tile definiton by global tile index\n * \n * NOTE: index is not stable across sessions/versions\n*/\nexport function getTileByIndex(index: number) {\n    if (index < 0 || index >= tiles.length) {\n        return undefined;\n    }\n\n    return tiles[index]\n}\n","import { OrbitControls } from \"@react-three/drei\";\nimport React from \"react\";\nimport { Canvas, useThree } from \"react-three-fiber\";\nimport { Quaternion } from \"three\";\n\nimport { useKeyboard } from \"../hooks/useKeyboard\";\n\nimport { getTileByIndex, getTileCount } from \"../TileSets\";\n\nimport \"./AdminPage.css\";\n\nfunction DumpCamera() {\n  const { camera, gl } = useThree();\n  console.log(camera.position, camera.rotation);\n  return <></>;\n}\n\ninterface Props {\n  tileIndex: number\n}\n\nfunction TilePreview({ tileIndex }: Props) {\n  const { gl } = useThree()\n\n  const onClick = () => {\n    const a = document.createElement('a')\n    a.href = gl.domElement.toDataURL().replace(\"image/png\", \"image/octet-stream\")\n    a.download = `${getTileByIndex(tileIndex)!.id}.png`\n    a.click()\n  }\n\n  return (\n    <>\n    <directionalLight />\n    <ambientLight />\n    <group \n      onClick={onClick}\n      position-y={-1}>\n      {getTileByIndex(tileIndex)!.element}\n    </group>\n      \n    <DumpCamera />\n    <OrbitControls />\n    </>\n  )\n}\n\nexport default function AdminPage() {\n  const [tileIndex, setTileIndex] = React.useState(0);\n\n  useKeyboard((event: KeyboardEvent) => {\n    const up = event.type === \"keyup\";\n\n    switch (event.key.toLowerCase()) {\n      case \"escape\":\n        setTileIndex(0);\n        break;\n      case \"[\":\n        up && tileIndex > 0 && setTileIndex(tileIndex - 1);\n        break;\n      case \"]\":\n        up && tileIndex < getTileCount() - 1 && setTileIndex(tileIndex + 1);\n        break;\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <h1>Admin page</h1>\n      <h2>Create tile preview bitmap</h2>\n      <div className=\"icon-preview\">\n        <Canvas\n          gl={{ preserveDrawingBuffer: true }}\n          camera={{\n            position: [-1.3, 3.4, 4.4],\n            quaternion: new Quaternion(-0.65, -0.24, -0.18),\n          }}\n        >\n          <TilePreview tileIndex={tileIndex} />\n        </Canvas>\n      </div>\n      <p>Click on tile to download image</p>\n    </div>\n  );\n}\n","import { GroupProps } from 'react-three-fiber'\nimport { Level } from '../Level'\nimport { getTileById } from '../TileSets';\n\ninterface OwnProps {\n    level: Level\n    gridSize: number\n}\n\ntype LevelRendererProps = OwnProps & GroupProps\n\nexport function LevelRenderer({ level, gridSize }: LevelRendererProps) {\n    const tiles = level.tiles.map(tile => (\n        <group \n            key={`${tile.x}x${tile.y}`}\n            position-x={tile.x * gridSize + gridSize / 2}\n            position-z={tile.y * gridSize + gridSize / 2}\n            rotation-y={-(Math.PI / 2) * tile.rotation}\n            scale={[0.25,0.25,0.25]}\n        >\n            {getTileById(tile.id)?.element}\n        </group>\n    ))\n    \n    return ( <>{tiles}</> );\n}","import React, { Suspense } from 'react'\n\nimport { Canvas, PointerEvent } from 'react-three-fiber'\nimport { Stats, OrbitControls } from '@react-three/drei'\nimport { Object3D } from 'three';\n\nimport { useKeyboard } from '../hooks/useKeyboard';\nimport { LevelRenderer } from '../components/LevelRenderer';\n\nimport { findTileInLevel, Level, TileInstance } from '../Level';\nimport { getTileByIndex, getTileCount, getTileIndexById } from '../TileSets';\n\nimport './EditPage.css'\n\nconst gridSize = 1;\n\nconst defaultMap: Level = {\n    version: 0,\n    size: 64,\n    tiles: [],\n}\n\nexport default function EditPage() {\n    const cursorRef = React.useRef<Object3D>()\n    const [ tileIndex, setTileIndex ] = React.useState(-1)\n    const [ tileRotation, setTileRotation ] = React.useState(0)\n    const [ map, setMap ] = React.useState<Level>(defaultMap)\n\n    React.useEffect(() => {\n        const item = localStorage.getItem('untitled')\n        if (item) {\n            const lvl : Level = JSON.parse(item)\n            setMap(lvl)\n        }\n    }, [setMap])\n\n    // Handle moving the cursor\n    const onPointerMove = (event: PointerEvent) => {\n        const { point } = event\n        event?.stopPropagation()\n\n        const gridX = Math.floor(point.x / gridSize)\n        const gridY = Math.floor(point.z / gridSize)\n        document.getElementsByClassName('grid-pos')[0].textContent = `${gridX},${gridY} / ${point.x.toFixed(3)},${point.z.toFixed(3)} / ${tileRotation}`\n\n        if (cursorRef.current) {\n            cursorRef.current.position.set(\n                gridX * gridSize + gridSize / 2,\n                0,\n                gridY * gridSize + gridSize / 2,\n            )\n        }\n    }\n\n    // Handle modifying tile under cursor\n    const onPointerDown = (event: PointerEvent) => {\n        const { point } = event\n        event?.stopPropagation()\n\n        const gridX = Math.floor(point.x / gridSize)\n        const gridY = Math.floor(point.z / gridSize)\n        let tile = findTileInLevel(map, gridX, gridY)\n        \n        // Check if we're picking a tile\n        if (event.shiftKey) {\n            // ... and if so, handle case of no tile\n            setTileIndex(tile ? getTileIndexById(tile.id) : -1 )\n            tile && setTileRotation(tile.rotation)\n            return\n        }\n\n        // Update state with new tile (if there was one)\n        const { version, size, tiles } = map\n        const newTiles: TileInstance[] = tiles.slice()\n\n        if (tile && (tileIndex !== -1 || event.ctrlKey)) {\n            newTiles.splice(newTiles.indexOf(tile), 1)\n        }\n\n        // Only place new tile if one is \n        // selected and ctrl key not pressed\n        if (tileIndex >= 0 && !event.ctrlKey) {\n            newTiles.push({\n                id: getTileByIndex(tileIndex)!.id,\n                x: gridX,\n                y: gridY,\n                rotation: tileRotation,\n            })\n        }\n        \n        // finally update map!\n        setMap({ version, size, tiles: newTiles })\n    }\n\n    useKeyboard((event: KeyboardEvent) => {\n        const up = event.type === 'keyup'\n        switch(event.key.toLowerCase()) {\n            case 'escape':\n                setTileIndex(-1)\n                break;\n            case 's':\n                localStorage.setItem('untitled', JSON.stringify(map))\n                break;\n            case 'r':\n                up && setTileRotation((tileRotation + 1) % 4)\n                break\n            case '[':\n                up && tileIndex >= 0 && setTileIndex(tileIndex -1)\n                break\n            case ']':\n                up && tileIndex < getTileCount() -1 && setTileIndex(tileIndex +1)\n                break\n        }\n    })\n\n    const levelSize = map.size * gridSize\n    /* Why does this not work??? \n    tabIndex={-1} onKeyDown={keyPressed}\n    */\n    return (\n        <>\n        <span className=\"grid-pos\"/>\n        <Canvas shadowMap camera={{position:[8,5,0]}}>\n            <Suspense fallback={null}>\n                <OrbitControls maxPolarAngle={Math.PI * 0.5} />\n                <Stats />\n                <directionalLight intensity={0.4}/>\n                <ambientLight intensity={0.2} />\n                <gridHelper args={[levelSize, map.size, 0x222222, 0x444444]} />\n                <axesHelper args={[levelSize]} position-y={0.01} />\n                <LevelRenderer gridSize={gridSize} level={map} />\n                { /* hidden plane is there to detect mouse movement on \"ground\" */}\n                <mesh \n                    name=\"hidden-plane\"\n                    rotation-x={-Math.PI / 2}\n                    onPointerMove={onPointerMove}\n                    onPointerDown={onPointerDown}\n                    >\n                    <planeBufferGeometry args={[levelSize, levelSize]}/>\n                    <meshBasicMaterial visible={false}/>\n                </mesh>\n                <group\n                    ref={cursorRef}\n                    name=\"cursor-container\"\n                    position={[gridSize / 2, 0, gridSize / 2]}>\n\n                    {\n                    // show selected tile on cursor\n                    tileIndex >= 0 && <group\n                        scale={[0.25,0.25,0.25]}\n                        rotation-y={ -(Math.PI / 2) * tileRotation}\n                        name=\"tile-container\">\n                        {getTileByIndex(tileIndex)!.element}\n                    </group>\n                    }\n                    {\n                    <mesh\n                        name=\"cursor\"\n                        rotation-x={-Math.PI / 2}\n                        position-y={0.01}>\n                        <planeBufferGeometry args={[1,1,3,3]} />\n                        <meshBasicMaterial color={0x440000} wireframe />\n                    </mesh>\n                    }\n                </group>\n            </Suspense>\n        </Canvas>\n        </>\n    )\n}\n","import React from 'react'\n\nimport {\n    Link\n} from 'react-router-dom';\n  \nexport default function HomePage() {\n    return (\n        <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/play\">Play</Link>\n          </li>\n          <li>\n            <Link to=\"/edit\">Edit</Link>\n          </li>\n        </ul>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useAnimations, useGLTF, useTexture } from \"@react-three/drei\"\nimport { GroupProps } from \"react-three-fiber\"\nimport { Mesh, MeshBasicMaterial, RepeatWrapping } from 'three'\n\nconst playerModel = 'npc/Rogue.glb'\n\ninterface PlayerOwnProps {\n    animation?: string\n}\n\ntype PlayerProps = PlayerOwnProps & GroupProps\n\nexport const Player = React.forwardRef((props: PlayerProps, nref: any) => {\n    const { animations, nodes } = useGLTF(playerModel)\n    const { ref, actions } = useAnimations(animations)\n    const tex = useTexture('npc/Rogue_Texture.png')\n    tex.wrapS = tex.wrapT = RepeatWrapping;\n    const [ activeAnimation, setActiveAnimation ] = React.useState('')\n\n    nodes.Scene.traverse(o => {\n        if (o instanceof Mesh) {\n            const m = o as Mesh;\n            (Array.isArray(m.material) ? m.material : [m.material]).forEach(m => {\n                (m as MeshBasicMaterial).map = tex;\n            })\n        }\n    })\n\n    React.useEffect(() => {\n        //console.log(actions)\n        if (props.animation) {\n            if (activeAnimation !== props.animation) {\n                if (activeAnimation) {\n                    actions[activeAnimation!].stop()\n                }\n                setActiveAnimation(props.animation)\n                actions[props.animation].play()\n            }\n        }\n    }, [actions, activeAnimation, setActiveAnimation, props.animation])\n\n    return (\n        <group name=\"player\" {...props} ref={nref}>\n            <primitive ref={ref} object={nodes.Scene} />\n            {props.children}\n        </group>\n        \n    )\n})\n\nuseGLTF.preload(playerModel)\n","import React, { Suspense } from 'react'\n\nimport { Canvas, GroupProps, useFrame } from 'react-three-fiber'\nimport { OrbitControls, Stats } from '@react-three/drei'\nimport { Object3D, Vector3 } from 'three'\n\nimport { LevelRenderer } from '../components/LevelRenderer'\nimport { Player } from '../components/Player'\nimport { useKeyboard } from '../hooks/useKeyboard'\n\nimport { Level, SubTilePhysics } from '../Level'\nimport { getTileById } from '../TileSets'\n\nimport './PlayPage.css'\n\ninterface SceneOwnProps {\n    level: Level\n}\ntype SceneProps = SceneOwnProps & GroupProps\n\n/*\n        <pointLight ref={lightRef} args={[0xffffff,0.5,2,0.1]} position={[2.5,1,0.4]} castShadow />\n*/\nfunction Scene({ level }: SceneProps) {\n    const lightRef = React.useRef<Object3D>()\n    const playerRef = React.useRef<Object3D>()\n    const tmpVec = React.useRef<Vector3>(new Vector3())\n    const cameraRef = React.useRef<Object3D>()\n    const [ playerAnim, setPlayerAnim ] = React.useState('Idle')\n\n    const physGridSize = 64 * 3\n\n    const physicsMap = React.useMemo(() => {\n        let physGrid = new Array<SubTilePhysics>(physGridSize * physGridSize).fill(SubTilePhysics.Void)\n        level.tiles.forEach(ti => {\n            const x = (ti.x + 32) * 3; // add half the map size (in tiles) to\n            const y = (ti.y + 32) * 3; // make sure coordinates are positive\n            let tileP = getTileById(ti.id)\n            if (tileP) {\n                const physics = tileP.physics.slice();\n                for (let i = 0; i < ti.rotation; i++) {\n                    const old = physics.slice()\n                    physics[0] = old[6]\n                    physics[1] = old[3]\n                    physics[2] = old[0]\n                    physics[3] = old[7]\n                    physics[4] = old[4]\n                    physics[5] = old[1]\n                    physics[6] = old[8]\n                    physics[7] = old[5]\n                    physics[8] = old[2]\n                }\n                let off = (y * physGridSize) + x\n                for (let i = 0; i < 3; i++) {\n                    physGrid[off + 0] = physics[3 * i + 0]\n                    physGrid[off + 1] = physics[3 * i + 1]\n                    physGrid[off + 2] = physics[3 * i + 2]\n                    off += physGridSize\n                }\n            }\n        })\n        return physGrid\n    }, [level.tiles, physGridSize])\n\n    const physDebug = React.useMemo(() => {\n        const elems: JSX.Element[] = []\n        physicsMap.forEach((el, idx) => {\n            if (el === SubTilePhysics.Blocked) {\n                const x = ((idx % physGridSize) * 1/3) - 32 + (1/3)/2\n                const y = (Math.floor(idx / physGridSize) * 1/3) - 32 + (1/3)/2\n                elems.push(\n                    <mesh key={idx} position={[x, 1, y]}>\n                        <boxBufferGeometry args={[1/3,2,1/3]}/>\n                        <meshLambertMaterial color=\"hotpink\" />\n                    </mesh>\n                )\n            }\n        })\n\n        return elems\n    }, [physGridSize, physicsMap])\n\n    const inputs = {\n        left: false,\n        right: false,\n        forward: false,\n        backward: false,\n        attack: false,\n    }\n\n    useFrame(({ camera }) => {\n        if (playerRef.current && cameraRef.current) {\n            // Update camera\n\n            cameraRef.current.getWorldPosition(tmpVec.current)\n            camera.position.lerp(tmpVec.current, 0.05)\n            const pos = playerRef.current.position\n            camera.lookAt(pos.x, pos.y + 0.5, pos.z)\n\n            // Update rotation\n            if (inputs.left) {\n                playerRef.current.rotation.y += Math.PI * 0.005\n            }\n            if (inputs.right) {\n                playerRef.current.rotation.y += -Math.PI * 0.005\n            }\n            if (inputs.forward || inputs.backward) {\n                tmpVec.current.set(0, 0, inputs.forward ? 0.01 : -0.01)\n                tmpVec.current.applyQuaternion(playerRef.current.quaternion)\n                tmpVec.current.add(playerRef.current.position)\n\n                // Check if we can actually move there\n                let physGridX = Math.floor((tmpVec.current.x + 32) / (1/3));\n                let physGridY = Math.floor((tmpVec.current.z + 32) / (1/3));\n                console.log(Math.floor(physGridX / 3) - 32, Math.floor(physGridY / 3) - 32, physGridX % 3, physGridY % 3)\n\n                if (true) { //physicsMap[physGridY * physGridSize + physGridX] === SubTilePhysics.Walkable) {\n                    playerRef.current.position.copy(tmpVec.current)\n                }\n\n                \n            }\n        }\n    });\n\n    useKeyboard(event => {\n        const down = event.type === 'keydown'\n        switch(event.key.toLowerCase()) {\n            case 'arrowup':\n                break;\n            case 'arrowdown':\n                break;\n            case 'arrowleft':\n                break;\n            case 'arrowright':\n                break;\n\n            case 'w':   inputs.forward = down; setPlayerAnim(down ? 'Walk' : 'Idle'); break;\n            case 'a':   inputs.left = down; break;\n            case 's':   inputs.backward = down; setPlayerAnim(down ? 'Walk' : 'Idle'); break;\n            case 'd':   inputs.right = down; break;\n\n            case 'c':\n                // TODO Switch camera modes\n                break;\n\n            case 'space':\n            case ' ':   inputs.attack = down;\n                break;\n\n            default:\n                console.log(event.key)\n        }\n    })\n\n    const staticGeo = React.useMemo(() => <LevelRenderer level={level} gridSize={1} />, [level])\n\n/*\n        <OrbitControls maxPolarAngle={Math.PI * 0.5} />\n*/\n\n    return (\n        <>\n        <Stats />\n\n        <ambientLight intensity={0.1} />\n        <directionalLight intensity={0.4} position={[2.5,1,0.4]} ref={lightRef} />\n\n        {staticGeo}\n        {/*physDebug*/}\n\n        <Player\n            animation={playerAnim}\n            scale={[0.25,0.25,0.25]}\n            position={[1.5,0.06,0.4]}\n            ref={playerRef}>\n            <group position={[.7,3,-3]} ref={cameraRef} />\n        </Player>\n        </>\n    )\n}\n\n/*\n*/\n\nexport default function PlayPage() {\n    const level: Level = JSON.parse(localStorage.getItem('untitled')!)\n\n    return (\n        <Canvas shadowMap camera={{position:[8,5,0]}} className=\"ingame\">\n            <Suspense fallback={null}>\n                <Scene level={level} />\n            </Suspense>\n        </Canvas>\n    )\n}\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport AdminPage from './pages/AdminPage';\nimport EditPage from './pages/EditPage';\nimport HomePage from './pages/HomePage';\nimport PlayPage from './pages/PlayPage';\n\nexport default function App() {\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/play\">\n            <PlayPage />\n          </Route>\n          <Route path=\"/edit\">\n            <EditPage />\n          </Route>\n          <Route path=\"/admin\">\n            <AdminPage />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}